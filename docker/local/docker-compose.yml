services:
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - goflights
    environment:
      SPRING_RABBITMQ_HOST: "rabbitmq"
  configserver:
    image: "dineshsnkumar/configserver:0.0.2-SNAPSHOT"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - goflights
  flights:
    image: "dineshsnkumar/flights:0.0.2-SNAPSHOT"
    container_name: flights-ms
    ports:
      - "9000:9000"
    deploy:
      resources:
        limits:
          memory: 700m
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - goflights
    environment:
      SPRING_APPLICATION_NAME: "flights"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default
  customers:
    image: "dineshsnkumar/customers:0.0.2-SNAPSHOT"
    container_name: customers-ms
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - goflights
    environment:
      SPRING_APPLICATION_NAME: "customers"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default

networks:
  goflights:
    driver: "bridge"